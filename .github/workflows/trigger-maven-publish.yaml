#################################################################################
#  Copyright (c) 2023 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021,2023 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0.
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#################################################################################


---
name: "Publish Maven Artefacts to Maven Central"

on:
  workflow_dispatch:
    inputs:
      version:
        required: false
        description: 'a semver string denoting the version. Append -SNAPSHOT for snapshots. If omitted, the version is taken from gradle.properties'
      dated:
        type: string
        required: false
  workflow_call:
    inputs:
      version:
        type: string
        required: false
        description: 'a semver string denoting the version. Append -SNAPSHOT for snapshots. If omitted, the version is taken from gradle.properties'
      dated:
        type: string
        required: false

jobs:
  maven-release:
    name: 'Publish all artefacts to MavenCentral'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java

      - run: |
          echo "Input Version: ${{ inputs.version }}"

          # set the input version in gradle.properties, if passed
          if [ ! -z ${{ inputs.version }} ];
          then
            sed -i 's#^version=.*#version='"${{ inputs.version }}"'#g' $(find . -name "gradle.properties")
            VERSION=${{ inputs.version }}
          fi
          grep version gradle.properties | (echo -n "Publishing using " && cat)

      - name: Commit changes
        id: make-commit
        shell: bash
        run: |
          git add .
          git config user.name "Bruno Nogueira"
          git config user.email "7brunon@gmail.com"
          if git diff --cached --quiet; then
            echo "Same Sanpshot"
          else
            echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
            git commit --message "bla"
            git push origin HEAD
          fi
      - name: Try to fail
        run: exit 1

  update-snapshot-badge:
    name: 'Update Snapshot badge in README.md'
    needs: maven-release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Update README badge
        run: |
          RESULT="${{ needs.maven-release.result }}"
          VERSION="${{ inputs.version }}"
          DATED="${{ inputs.dated }}"
          ESCAPED_VERSION="${VERSION//-/--}"
          
          echo "needs.maven-release.outputs.result = $RESULT"
          echo "inputs.version = $VERSION"
          echo "inputs.dated = $DATED"
          echo "escaped_version = $ESCAPED_VERSION"
        
          if [ always() && ("$RESULT" == "success") ]; then
            if [ -n "$DATED" ]; then
              sed -i "s|^\[fork\]:.*|[fork]:https://img.shields.io/badge/latest--snapshot-$ESCAPED_VERSION-green|" 'README.md'
            fi
          else
            sed -i "s|^\[fork\]:.*|[fork]:https://img.shields.io/badge/latest--snapshot-UploadError-red|" 'README.md'
          fi

      - name: Commit changes
        id: make-commit
        shell: bash
        run: |
          git add .
          git config user.name "Bruno Nogueira"
          git config user.email "7brunon@gmail.com"
          if git diff --cached --quiet; then
            echo "Not a versioned Sanpshot"
          else
            echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
            git commit --message "bla"
            git push origin HEAD
          fi